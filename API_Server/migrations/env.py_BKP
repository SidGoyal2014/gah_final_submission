from sqlalchemy import engine_from_config
from sqlalchemy import pool
from alembic import context
from . import my_model  # import your model here

# this is the Alembic Config object, which provides
# access to the values within the .ini file in use.
config = context.config

# Interpret the config file for Python logging.
# This line sets up loggers basically.
fileConfig(config.config_file_name)

# add your model's MetaData object here
# for 'autogenerate' support
target_metadata = my_model.Base.metadata  # replace with your model's Base

def run_migrations_online():
    """Run migrations in 'online' mode."""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
        # Prevent dropping tables
        connect_args={'charset': 'utf8mb4'},
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            # Never drop tables automatically
            compare_type=True,
            compare_server_default=True,
            render_as_batch=True
        )

        with context.begin_transaction():
            context.run_migrations()


def run_migrations_offline():
    """Run migrations in 'offline' mode."""
    # This is where you would define the URL for your database
    url = config.get_main_option("sqlalchemy.url")
    # Configure the context for offline migrations
    context.configure(
        url=url,
        target_metadata=target_metadata,
        # Don't include the database URL in the migration script
        include_schemas=True,
        render_as_batch=True
    )

    with context.begin_transaction():
        context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()